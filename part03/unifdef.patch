--- 1/scripts/unifdef.c
+++ 2/scripts/unifdef.c
@@ -47,7 +47,6 @@
 #include <sys/stat.h>
 
 #include <ctype.h>
-#include <err.h>
 #include <errno.h>
 #include <stdarg.h>
 #include <stdbool.h>
@@ -56,6 +55,14 @@
 #include <string.h>
 #include <unistd.h>
 
+#include <getopt.h>
+#define FILENAME_MAX 256
+void err(int status, char* fmt, ...) { fprintf(stderr, "ERROR\n"); exit(status);}
+void errx(int status, char* fmt, ...) { fprintf(stderr, "ERROR\n"); exit(status);}
+void warn(char* fmt, ...) { }
+void warnx(char* fmt, ...) { }
+int fchmod(int fd, mode_t mode) {return 0;}
+
 const char copyright[] =
     "@(#) $Version: unifdef-2.5 $\n"
     "@(#) $Author: Tony Finch (dot@dotat.at) $\n"
@@ -328,29 +335,8 @@
 		output = stdout;
 	} else {
 		struct stat ist, ost;
-		if (stat(ofilename, &ost) == 0 &&
-		    fstat(fileno(input), &ist) == 0)
-			overwriting = (ist.st_dev == ost.st_dev
-				    && ist.st_ino == ost.st_ino);
-		if (overwriting) {
-			const char *dirsep;
-			int ofd;
-
-			dirsep = strrchr(ofilename, '/');
-			if (dirsep != NULL)
-				snprintf(tempname, sizeof(tempname),
-				    "%.*s/" TEMPLATE,
-				    (int)(dirsep - ofilename), ofilename);
-			else
-				snprintf(tempname, sizeof(tempname),
-				    TEMPLATE);
-			ofd = mkstemp(tempname);
-			if (ofd != -1)
-				output = fdopen(ofd, "wb+");
-			if (output == NULL)
-				err(2, "can't create temporary file");
-			fchmod(ofd, ist.st_mode & (S_IRWXU|S_IRWXG|S_IRWXO));
-		} else {
+
+	  {
 			output = fopen(ofilename, "wb");
 			if (output == NULL)
 				err(2, "can't open %s", ofilename);
@@ -1203,13 +1189,6 @@
 static void
 debug(const char *msg, ...)
 {
-	va_list ap;
-
-	if (debugging) {
-		va_start(ap, msg);
-		vwarnx(msg, ap);
-		va_end(ap);
-	}
 }
 
 static void
